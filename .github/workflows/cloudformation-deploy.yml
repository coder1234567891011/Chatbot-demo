name: Deploy with CloudFormation

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-1
  STACK_NAME: chatbot-stack
  TEMPLATE_FILE: .aws/infra.yaml
  ECR_REPOSITORY: chatbot-demo

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push Docker image
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Deploy CloudFormation stack
      run: |
        aws cloudformation deploy \
          --stack-name $STACK_NAME \
          --template-file $TEMPLATE_FILE \
          --capabilities CAPABILITY_IAM \
          --parameter-overrides \
            ContainerImage=${{ steps.build-image.outputs.image }}
