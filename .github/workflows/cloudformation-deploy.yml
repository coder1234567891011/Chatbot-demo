name: Deploy with CloudFormation

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-1
  STACK_NAME: chatbot-demo-stack
  TEMPLATE_FILE: .aws/infra.yaml
  ECR_REPOSITORY: chatbot-demo

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push Docker image
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
        GPT_KEY: ${{ secrets.GPT_KEY }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Deploy CloudFormation stack
      run: |
        aws cloudformation deploy \
        --stack-name chatbot-demo-stack \
        --template-file .aws/infra.yaml \
        --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \
        --parameter-overrides \
          SSLCertificateArn=arn:aws:acm:us-east-1:897722706074:certificate/1983ae68-b062-4410-abee-474c683966bb \
          ImageUri=${{ steps.build-image.outputs.image }} \
          VpcId=vpc-0df761a303c14b613 \
          Subnets="subnet-05efd86d3373424bd, subnet-0cec2ad0eeb49da63, subnet-0f60eca4e20611767, subnet-0ce94da00d8e48810, subnet-00ca4b3185a5de62f, subnet-018201170b979928c"
